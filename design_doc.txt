* TODOs

  - use internal build/release versions everywhere
  - sit down with Jessica to work out a mockup demonstration mode
    for teachers

* Design Concepts

** General

*** Values to measure

  - in mg/l
    - nitrate ~13-80
    - ammonium ~0.2
    - oxygen ~10.5

  - others
    - pH ~6.5-6.7
    - temperature: degrees celsius ~24-25
    - light intensity: candela

  -> we need to determine what critical levels are


*** Open questions

  -> if yes, we need a time series database !!!
  - for now, we will use whisper/graphite to store time series data
  - time zones ?
  - locations ?


** Web application

- initial user screen is a dashboard
- the web application to manage user setups
- should be as simple as possible, with assistants
- contains the simulation
- there is no conceptual difference between a simulated system and a real system
- contains help for connection to Aquaponics systems
- has API (Google OAuth2) for
  - Aquaponics data upload
  - mobile devices monitoring
  - web interfaces monitoring

- Alerts
  - email
  - settings: sliders for all measurements
    - green zones and yellow zones
    - defaults come from system, user can override

- sharing: systems can be private or shared publicly or in Google+ circles
- store location information for each system and user

*** TODO

  - let user specify their geolocation using Google Maps
  - add a control to upload a picture for an Aquaponics system
    - do it similar to Google Account: Drag and Drop or select
  - the google login call actually can take a redirect url, integrate the redirection to dashboard ?
  - Android access
  - Windows access

** Measurement station client

  - Use the Vernier GoIO and NGIO SDKs to directly interface to the probeware
  - Idea: create a small background service with HTTP interface that can be
    started and stopped and configured
    - libmicrohttpd
  - measure, and submit with a configurable sample size

*** TODO

  - support retrieval and storage of refresh token and system id
  - make configurable through API


** Simulation

- integrated in web application
- outputs the same values as a real system
- simulate automatically/simulate on demand - depending on the setting

*** TODO

- integrate in web app
- update simulation

** TODO - nice to have

- use WebGL for the system representation

** Android App

- model it after the weather app:
  1. a large widget that says last update, a touch will go into the settings
     screen
  2. a small widget that takes very little space, it only displays measured
     items and the warn colors
- notifications:
  - Android standard
  - Pebble

    
** iOS App

- iOS 8 is the first iOS version to support something like widgets,
  but it is in the Notification Center making it less helpful, yet
  if we want to do it, do it there

** Pebble App

- for now notifications work fine
- custom watchface would be cool

* Brain Storming

** Cool Ideas

- determine harvest times and make recommendations to harvest
- depending on the type of fish and plants, make recommendations
for recipes !!!

** Names ?

- Aquapony (exists already, so either Aquaponnie or Aquaponny) !!!!
